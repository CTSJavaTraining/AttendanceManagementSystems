package com.attendance.entity;
// Generated Sep 29, 2016 12:40:42 PM by Hibernate Tools 5.2.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employee")
public class Employee implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 3940378932466376939L;
	private EmployeeId id;
	private LocationDetails locationdetails;
	private String firstname;
	private String lastname;
	private String status;
	private String usertype;
	private Date joiningDate;
	private Date relievingDate;
	private Set<MachineDetails> machinedetailses = new HashSet<>();
	private Set<AttendanceDetails> attendancedetailses = new HashSet<>();

	public Employee() {
	}

	public Employee(EmployeeId id, LocationDetails locationdetails, String firstname, String lastname, String status,
			String usertype, Date joiningDate) {
		this.id = id;
		this.locationdetails = locationdetails;
		this.firstname = firstname;
		this.lastname = lastname;
		this.status = status;
		this.usertype = usertype;
		this.joiningDate = joiningDate;
	}

	public Employee(EmployeeId id, LocationDetails locationdetails, String firstname, String lastname, String status,
			String usertype, Date joiningDate, Date relievingDate, Set<MachineDetails> machinedetailses, Set attendancedetailses) {
		this.id = id;
		this.locationdetails = locationdetails;
		this.firstname = firstname;
		this.lastname = lastname;
		this.status = status;
		this.usertype = usertype;
		this.joiningDate = joiningDate;
		this.relievingDate = relievingDate;
		this.machinedetailses = machinedetailses;
		this.attendancedetailses = attendancedetailses;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "employeeid", column = @Column(name = "employeeid", nullable = false)),
			@AttributeOverride(name = "accessCardno", column = @Column(name = "access_cardno", nullable = false, length = 60)) })
	public EmployeeId getId() {
		return this.id;
	}

	public void setId(EmployeeId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "locationId", nullable = false)
	public LocationDetails getLocationdetails() {
		return this.locationdetails;
	}

	public void setLocationdetails(LocationDetails locationdetails) {
		this.locationdetails = locationdetails;
	}

	@Column(name = "firstname", nullable = false, length = 25)
	public String getFirstname() {
		return this.firstname;
	}

	public void setFirstname(String firstname) {
		this.firstname = firstname;
	}

	@Column(name = "lastname", nullable = false, length = 25)
	public String getLastname() {
		return this.lastname;
	}

	public void setLastname(String lastname) {
		this.lastname = lastname;
	}

	@Column(name = "status", nullable = false, length = 10)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "usertype", nullable = false, length = 10)
	public String getUsertype() {
		return this.usertype;
	}

	public void setUsertype(String usertype) {
		this.usertype = usertype;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "joining_date", nullable = false, length = 19)
	public Date getJoiningDate() {
		return this.joiningDate;
	}

	public void setJoiningDate(Date joiningDate) {
		this.joiningDate = joiningDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "relieving_date", length = 19)
	public Date getRelievingDate() {
		return this.relievingDate;
	}

	public void setRelievingDate(Date relievingDate) {
		this.relievingDate = relievingDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<MachineDetails> getMachinedetailses() {
		return this.machinedetailses;
	}

	public void setMachinedetailses(Set<MachineDetails> machinedetailses) {
		this.machinedetailses = machinedetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "employee")
	public Set<AttendanceDetails> getAttendancedetailses() {
		return this.attendancedetailses;
	}

	public void setAttendancedetailses(Set<AttendanceDetails> attendancedetailses) {
		this.attendancedetailses = attendancedetailses;
	}

}
